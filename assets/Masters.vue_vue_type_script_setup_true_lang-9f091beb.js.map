{"version":3,"file":"Masters.vue_vue_type_script_setup_true_lang-9f091beb.js","sources":["../../src/pages/settings/pages/Expenses.vue","../../src/core/requests/Currencies.ts","../../src/pages/settings/Masters.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteExpense, getAllExpenses, newExpense, updateExpense } from '../../../core/requests/Expenses'\nimport { validators } from '../../../services/utils'\nimport { ceil } from 'lodash'\nimport { onlyNumbers } from '../../../core/helpers'\n\nconst vOnlyDigits = onlyNumbers\n\nconst { notify } = useToast()\nconst columns = [\n  { key: 'Tipo', sortable: true },\n  { key: 'Valor', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst items = ref([])\nconst itemSelected = ref(null)\nconst showNew = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst isLoading = ref(false)\nconst form: any = ref({})\nconst { validate, reset } = useForm('formExpense')\n\nonMounted(async () => {\n  await getData()\n})\n\nasync function getData() {\n  isLoading.value = true\n  const data: any = await getAllExpenses()\n  items.value = data.map((i: any) => ({\n    ...i,\n    Tipo: i.name,\n    Valor: `S/ ${i.value || '0.00'}`,\n  }))\n  isLoading.value = false\n}\n\nconst doDelete = async () => {\n  await deleteExpense(itemSelected.value)\n  await getData()\n  showConfirm.value = false\n}\nconst doNew = async (id?: any) => {\n  try {\n    validate()\n    isLoading.value = true\n\n    if (id) {\n      await updateExpense(id, {\n        ...form.value,\n      })\n    } else {\n      await newExpense({\n        ...form.value,\n      })\n    }\n\n    await getData()\n    isLoading.value = false\n    reset()\n\n    notify({\n      message: 'Proceso finalizado',\n      color: 'success',\n    })\n\n    activeItem.value = null\n    showNew.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n}\n\nconst activeItem: any = ref(null)\nconst sowUpdate = (data: any) => {\n  if (data) {\n    showNew.value = data\n    activeItem.value = data\n    form.value.name = data.name\n    form.value.value = data.value\n  } else {\n    activeItem.value = data\n    form.value.name = ''\n    form.value.value = ''\n  }\n}\n\nconst process = () => {\n  if (!activeItem.value) {\n    doNew()\n  } else {\n    doNew(activeItem.value.id)\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Viaticos\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNew = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"items\" :columns=\"columns\" class=\"text-xs\" :loading=\"isLoading\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"edit\" color=\"primary\" round @click=\"sowUpdate(row?.rowData)\"></VaButton>\n                <VaButton icon=\"delete\" color=\"danger\" round @click=\"needConfirm(row?.rowData?.id)\"></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNew\"\n      hide-default-actions\n      size=\"300px\"\n      close-button\n      blur\n      no-dismiss\n      @close=\"sowUpdate(null)\"\n      @ok=\"doNew\"\n    >\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo Viatico</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"formExpense\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"form.name\"\n              stateful\n              name=\"name\"\n              clearable\n              label=\"Tipo de viatico\"\n              class=\"mb-4\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"form.value\"\n              v-only-digits\n              stateful\n              name=\"value\"\n              clearable\n              label=\"Valor promedio\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  form.value = ceil(form.value, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"pr-2 font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"isLoading\" @click=\"process\">\n            <span class=\"ml-2\">Guardar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null)\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n","import { API } from '../constants'\n\nconst services = {\n  list: API + '/currencies',\n  delete: API + '/currencies',\n  register: API + '/currencies',\n}\n\nconst _token = localStorage.getItem('__token')\n\nexport async function getAllCurrencies() {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n  }\n  let res = null\n\n  await fetch(services.list, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nexport async function newCurrency(body: any) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n    body: JSON.stringify(body),\n  }\n  let res = null\n\n  await fetch(services.register, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nexport async function deleteCurrency(id: any) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n  }\n  let res = null\n\n  await fetch(`${services.delete}/${id}`, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport Expenses from './pages/Expenses.vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteVehicle, getAllVehicles, newVehicle } from '../../core/requests/Vehicles'\nimport { deleteDriver, getAllDrivers, newDriver, updateDriver } from '../../core/requests/Drivers'\nimport { deleteCurrency, getAllCurrencies } from '../../core/requests/Currencies'\nimport { deleteService, getAllServices, newService, updateService } from '../../core/requests/Services'\nimport { validators } from '../../services/utils'\nimport { onlyNumbers, onlyNumbersNoDigits } from '../../core/helpers'\nimport { ceil } from 'lodash'\n\nconst vOnlyDigits = onlyNumbers\nconst vOnlyNumbers = onlyNumbersNoDigits\n\nconst { notify } = useToast()\nconst vehiclesColumns = [\n  { key: 'Vehiculo', sortable: true },\n  { key: 'Tipo', sortable: true },\n  { key: 'Fabricación', sortable: true },\n  { key: 'Capacidad', sortable: true },\n  { key: 'Gal/Hr', sortable: true },\n  { key: 'Maquina Seca', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst driversColumns = [\n  { key: 'Tipo Conductor', sortable: true },\n  { key: 'Tarifa', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst servicesColumns = [\n  { key: 'Servicio', sortable: true },\n  { key: 'Descripción', sortable: true },\n  { key: 'Tarifa base', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst vehicles = ref([])\nconst drivers = ref([])\nconst services = ref([])\nconst currencies = ref([])\nconst itemSelected = ref(null)\nconst showNewVehicle = ref(false)\nconst loadingNewVehicle = ref(false)\nconst showNewDriver = ref(false)\n// const showNewCurrency = ref(false)\nconst showNewService = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst selectedType: any = ref(null)\nconst formVehicle: any = ref({})\nconst formDriver: any = ref({})\n// const formCurrency: any = ref({})\nconst formService: any = ref({})\nconst { validate, reset: vehicleReset } = useForm('fgVehicle')\nconst { validate: driverValidate, reset: driverReset } = useForm('fgDriver')\n// const { validate: currencyValidate, reset: currencyReset } = useForm('fgCurrency')\nconst { validate: serviceValidate, reset: serviceReset } = useForm('fgService')\n\nonMounted(() => {\n  getVehicles()\n  getDrivers()\n  getCurrencies()\n  getServices()\n})\n\nconst loadingServices = ref(false)\nasync function getServices() {\n  loadingServices.value = true\n  const servicesData: any = await getAllServices()\n  services.value = servicesData.map((i: any) => ({\n    ...i,\n    Servicio: i.service,\n    Descripción: i.description,\n    'Tarifa base': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingServices.value = false\n}\n\nconst loadingVehicles = ref(false)\nasync function getVehicles() {\n  loadingVehicles.value = true\n  const vehiclesData: any = await getAllVehicles()\n  vehicles.value = vehiclesData.map((i: any) => ({\n    ...i,\n    Vehiculo: i.name,\n    Tipo: i.type,\n    Fabricación: i.year,\n    Capacidad: i.capacity,\n    'Gal/Hr': `${i.cost || 0}`,\n    'Maquina Seca': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingVehicles.value = false\n}\n\nconst loadingDrivers = ref(false)\nasync function getDrivers() {\n  loadingDrivers.value = true\n  const driversData: any = await getAllDrivers()\n  drivers.value = driversData\n    .map((i: any) => {\n      if (i.fee > 0) {\n        return {\n          ...i,\n          'Tipo Conductor': i.type,\n          Tarifa: i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n        }\n      }\n    })\n    .filter((f: any) => f)\n  loadingDrivers.value = false\n}\n\nasync function getCurrencies() {\n  const currenciesData: any = await getAllCurrencies()\n  currencies.value = currenciesData.map((i: any) => ({\n    ...i,\n    Moneda: i.label,\n    'Tipo de Cambio': i.value,\n  }))\n}\n\nconst doDelete = async () => {\n  if (selectedType.value === 'vehicles') {\n    await deleteVehicle(itemSelected.value)\n    await getVehicles()\n  }\n\n  if (selectedType.value === 'currencies') {\n    await deleteCurrency(itemSelected.value)\n    await getCurrencies()\n  }\n\n  if (selectedType.value === 'drivers') {\n    await deleteDriver(itemSelected.value)\n    await getDrivers()\n  }\n\n  if (selectedType.value === 'service') {\n    await deleteService(itemSelected.value)\n    await getServices()\n  }\n\n  selectedType.value = null\n  showConfirm.value = false\n}\nconst doNewVehicle = async () => {\n  loadingNewVehicle.value = true\n  try {\n    validate()\n    await newVehicle({\n      ...formVehicle.value,\n    })\n\n    await getVehicles()\n\n    notify({\n      message: 'Vehiculo registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewVehicle.value = false\n    vehicleReset()\n    showNewVehicle.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst loadingNewDriver = ref(false)\nconst doNewDriver = async () => {\n  try {\n    driverValidate()\n    loadingNewDriver.value = true\n    const id = selectedDriver.value?.id\n    if (id) {\n      await updateDriver(id, {\n        ...formDriver.value,\n      })\n    } else {\n      await newDriver({\n        ...formDriver.value,\n      })\n    }\n\n    await getDrivers()\n\n    notify({\n      message: 'Conductor registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewDriver.value = false\n    selectedDriver.value = null\n\n    driverReset()\n    showNewDriver.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst loadingNewService = ref(false)\nconst doNewService = async () => {\n  try {\n    serviceValidate()\n    loadingNewService.value = true\n    if (selectedService.value?.id) {\n      await updateService(selectedService.value.id, {\n        ...formService.value,\n      })\n    } else {\n      await newService({\n        ...formService.value,\n      })\n    }\n\n    await getServices()\n\n    notify({\n      message: 'Servicio registrado correctamente',\n      color: 'success',\n    })\n    loadingNewService.value = false\n\n    serviceReset()\n    formService.value = {}\n    showNewService.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any, type: string) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n  selectedType.value = type\n}\nconst showViewService = ref(false)\nconst closeViewService = () => {\n  formService.value = {}\n  showViewService.value = false\n  selectedService.value = null\n}\n\nconst vehicleTypes = [\n  'Ligero',\n  '2 Ejes',\n  '3 Ejes',\n  '4 Ejes',\n  '5 Ejes',\n  '6 Ejes',\n  '7 Ejes',\n  '8 Ejes',\n  '9 Ejes',\n  '10 Ejes',\n  '11 Ejes',\n  '12 Ejes',\n  '13 Ejes',\n  '14 Ejes',\n  '15 Ejes',\n]\n\nconst selectedVehicle: any = ref(null)\nconst sowUpdate = (data: any) => {\n  if (data) {\n    selectedVehicle.value = data\n    showNewVehicle.value = true\n\n    formVehicle.value.name = data?.name\n    formVehicle.value.type = data?.type\n    formVehicle.value.capacity = data?.capacity\n    formVehicle.value.year = data?.year\n    formVehicle.value.fee = data?.fee\n    formVehicle.value.cost = data?.cost\n  } else {\n    selectedVehicle.value = null\n    showNewVehicle.value = false\n\n    formVehicle.value.name = ''\n    formVehicle.value.type = ''\n    formVehicle.value.year = ''\n    formVehicle.value.capacity = ''\n    formVehicle.value.fee = ''\n    formVehicle.value.cost = ''\n  }\n}\n\nconst selectedDriver: any = ref(null)\nconst showUpdateDriver = (data: any) => {\n  if (data) {\n    selectedDriver.value = data\n    showNewDriver.value = true\n\n    formDriver.value.type = data?.type\n    formDriver.value.fee = data?.fee\n  } else {\n    selectedDriver.value = null\n    showNewDriver.value = false\n\n    formDriver.value.type = ''\n    formDriver.value.fee = ''\n  }\n}\n\nconst selectedService: any = ref(null)\nconst showUpdateService = (data: any) => {\n  if (data) {\n    selectedService.value = data\n    showNewService.value = true\n    formService.value.specifications = data?.specifications\n    formService.value.service = data?.service\n    formService.value.description = data?.description\n    formService.value.fee = data?.fee\n  } else {\n    selectedService.value = data\n    showNewService.value = false\n    formService.value.specifications = ''\n    formService.value.service = ''\n    formService.value.description = ''\n    formService.value.fee = ''\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Vehiculos\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewVehicle = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"vehicles\" :columns=\"vehiclesColumns\" class=\"text-xs\" :loading=\"loadingVehicles\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"edit\" color=\"primary\" round @click=\"sowUpdate(row?.rowData)\"></VaButton>\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'vehicles')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNewVehicle\"\n      hide-default-actions\n      size=\"300px\"\n      close-button\n      blur\n      no-dismiss\n      @close=\"sowUpdate(null)\"\n      @ok=\"doNewVehicle\"\n    >\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo vehiculo</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgVehicle\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formVehicle.name\"\n              stateful\n              name=\"name\"\n              clearable\n              label=\"Nombre de Vehiculo\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaSelect\n              v-model=\"formVehicle.type\"\n              class=\"w-full text-xs mb-3\"\n              label=\"Tipo de Vehiculo\"\n              :options=\"vehicleTypes\"\n              placeholder=\"Selecciona un tipo\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.capacity\"\n              v-only-digits\n              stateful\n              name=\"capacity\"\n              type=\"number\"\n              clearable\n              label=\"Capacidad\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.year\"\n              v-only-numbers\n              stateful\n              name=\"year\"\n              type=\"text\"\n              clearable\n              label=\"Año\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Maquina Seca\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formVehicle.fee = ceil(formVehicle.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n\n            <VaInput\n              v-model=\"formVehicle.cost\"\n              v-only-digits\n              stateful\n              type=\"number\"\n              name=\"cost\"\n              clearable\n              label=\"Consumo por kilometro (gal/hr)\"\n              class=\"mb-5\"\n            />\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewVehicle\" @click=\"doNewVehicle\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Conductores\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewDriver = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"drivers\" :columns=\"driversColumns\" class=\"text-xs\" :loading=\"loadingDrivers\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"edit\" color=\"primary\" round @click=\"showUpdateDriver(row?.rowData)\"></VaButton>\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'drivers')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNewDriver\"\n      hide-default-actions\n      size=\"300px\"\n      close-button\n      blur\n      no-dismiss\n      @close=\"showUpdateDriver(null)\"\n      @ok=\"doNewDriver\"\n    >\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo tipo de conductor</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgDriver\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formDriver.type\"\n              stateful\n              name=\"type\"\n              clearable\n              label=\"Tipo de chofer\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formDriver.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Tarifa por Hora\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formDriver.fee = ceil(formDriver.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"pr-2 font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewDriver\" @click=\"doNewDriver\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Servicios\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewService = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"services\" :columns=\"servicesColumns\" class=\"text-xs\" :loading=\"loadingServices\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <!-- <VaButton icon=\"visibility\" color=\"info\" round @click=\"viewService(row?.rowData)\"></VaButton> -->\n                <VaButton icon=\"edit\" color=\"primary\" round @click=\"showUpdateService(row?.rowData)\"></VaButton>\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'service')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNewService\"\n      hide-default-actions\n      size=\"400px\"\n      close-button\n      no-dismiss\n      blur\n      @beforeClose=\"closeViewService\"\n    >\n      <div>\n        <h4 v-if=\"!showViewService\" class=\"text-base mb-4\">Nuevo Servicio</h4>\n        <h4 v-if=\"showViewService\" class=\"text-base mb-4\">Detalle de Servicio</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgService\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formService.service\"\n              stateful\n              name=\"service\"\n              clearable\n              label=\"Tipo de servicio\"\n              class=\"mb-3\"\n              :readonly=\"showViewService\"\n              :rules=\"[validators.required]\"\n            />\n\n            <div class=\"columns-2\">\n              <div>\n                <VaInput\n                  v-model=\"formService.description\"\n                  stateful\n                  name=\"description\"\n                  clearable\n                  label=\"Detalle del servicio\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  :rules=\"[validators.required]\"\n                />\n              </div>\n\n              <div>\n                <VaInput\n                  v-model=\"formService.fee\"\n                  v-only-digits\n                  stateful\n                  name=\"fee\"\n                  clearable\n                  label=\"Tarifa base\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  @change=\"\n                    () => {\n                      formService.fee = ceil(formService.fee, 2)\n                    }\n                  \"\n                >\n                  <template #prependInner>\n                    <span class=\"pr-2 font-bold text-sm\">S/</span>\n                  </template>\n                </VaInput>\n              </div>\n            </div>\n\n            <div class=\"mb-5\">\n              <p style=\"font-size: 11px; font-weight: 600; color: var(--va-primary)\">Condiciones especificas:</p>\n              <QuillEditor\n                v-model:content=\"formService.specifications\"\n                theme=\"snow\"\n                content-type=\"html\"\n                :toolbar=\"['bold', 'italic']\"\n              />\n            </div>\n          </VaForm>\n        </div>\n        <div v-if=\"!showViewService\" class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewService\" @click=\"doNewService\">\n            <span class=\"ml-2\">Guardar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <Expenses />\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null, '')\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n"],"names":["vOnlyDigits","onlyNumbers","notify","useToast","columns","items","ref","itemSelected","showNew","showConfirm","isDeleting","isLoading","form","validate","reset","useForm","onMounted","getData","data","getAllExpenses","i","doDelete","deleteExpense","doNew","id","updateExpense","newExpense","activeItem","e","needConfirm","sowUpdate","process","services","API","_token","getAllCurrencies","requestOptions","res","response","deleteCurrency","vOnlyNumbers","onlyNumbersNoDigits","vehiclesColumns","driversColumns","servicesColumns","vehicles","drivers","currencies","showNewVehicle","loadingNewVehicle","showNewDriver","showNewService","selectedType","formVehicle","formDriver","formService","vehicleReset","driverValidate","driverReset","serviceValidate","serviceReset","getVehicles","getDrivers","getCurrencies","getServices","loadingServices","servicesData","getAllServices","loadingVehicles","vehiclesData","getAllVehicles","loadingDrivers","driversData","getAllDrivers","f","currenciesData","deleteVehicle","deleteDriver","deleteService","doNewVehicle","newVehicle","loadingNewDriver","doNewDriver","_a","selectedDriver","updateDriver","newDriver","loadingNewService","doNewService","selectedService","updateService","newService","type","showViewService","closeViewService","vehicleTypes","selectedVehicle","showUpdateDriver","showUpdateService"],"mappings":"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"}