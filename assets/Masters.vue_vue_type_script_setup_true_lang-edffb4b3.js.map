{"version":3,"file":"Masters.vue_vue_type_script_setup_true_lang-edffb4b3.js","sources":["../../src/pages/settings/pages/Expenses.vue","../../src/core/requests/Currencies.ts","../../src/pages/settings/Masters.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteExpense, getAllExpenses, newExpense } from '../../../core/requests/Expenses'\nimport { validators } from '../../../services/utils'\nimport { ceil } from 'lodash'\nimport { onlyNumbers } from '../../../core/helpers'\n\nconst vOnlyDigits = onlyNumbers\n\nconst { notify } = useToast()\nconst columns = [\n  { key: 'Tipo', sortable: true },\n  { key: 'Valor', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst items = ref([])\nconst itemSelected = ref(null)\nconst showNew = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst isLoading = ref(false)\nconst form: any = ref({})\nconst { validate, reset } = useForm('formExpense')\n\nonMounted(async () => {\n  await getData()\n})\n\nasync function getData() {\n  isLoading.value = true\n  const data: any = await getAllExpenses()\n  items.value = data.map((i: any) => ({\n    ...i,\n    Tipo: i.name,\n    Valor: `S/ ${i.value || '0.00'}`,\n  }))\n  isLoading.value = false\n}\n\nconst doDelete = async () => {\n  await deleteExpense(itemSelected.value)\n  await getData()\n  showConfirm.value = false\n}\nconst doNew = async () => {\n  try {\n    validate()\n    isLoading.value = true\n    await newExpense({\n      ...form.value,\n    })\n\n    await getData()\n    isLoading.value = false\n    reset()\n\n    notify({\n      message: 'Registrado correctamente',\n      color: 'success',\n    })\n\n    showNew.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Viaticos\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNew = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"items\" :columns=\"columns\" class=\"text-xs\" :loading=\"isLoading\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"delete\" color=\"danger\" round @click=\"needConfirm(row?.rowData?.id)\"></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal v-model=\"showNew\" hide-default-actions size=\"300px\" close-button blur no-dismiss @ok=\"doNew\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo Viatico</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"formExpense\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"form.name\"\n              stateful\n              name=\"name\"\n              clearable\n              label=\"Tipo de viatico\"\n              class=\"mb-4\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"form.value\"\n              v-only-digits\n              stateful\n              name=\"value\"\n              clearable\n              label=\"Valor promedio\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  form.value = ceil(form.value, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"pr-2 font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"isLoading\" @click=\"doNew\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null)\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n","import { API } from '../constants'\n\nconst services = {\n  list: API + '/currencies',\n  delete: API + '/currencies',\n  register: API + '/currencies',\n}\n\nconst _token = localStorage.getItem('__token')\n\nexport async function getAllCurrencies() {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n  }\n  let res = null\n\n  await fetch(services.list, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nexport async function newCurrency(body: any) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n    body: JSON.stringify(body),\n  }\n  let res = null\n\n  await fetch(services.register, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nexport async function deleteCurrency(id: any) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n  }\n  let res = null\n\n  await fetch(`${services.delete}/${id}`, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport Expenses from './pages/Expenses.vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteVehicle, getAllVehicles, newVehicle } from '../../core/requests/Vehicles'\nimport { deleteDriver, getAllDrivers, newDriver } from '../../core/requests/Drivers'\nimport { deleteCurrency, getAllCurrencies, newCurrency } from '../../core/requests/Currencies'\nimport { deleteService, getAllServices, newService } from '../../core/requests/Services'\nimport { validators } from '../../services/utils'\nimport { onlyNumbers, onlyNumbersNoDigits } from '../../core/helpers'\nimport { ceil } from 'lodash'\n\nconst vOnlyDigits = onlyNumbers\nconst vOnlyNumbers = onlyNumbersNoDigits\n\nconst { notify } = useToast()\nconst vehiclesColumns = [\n  { key: 'Vehiculo', sortable: true },\n  { key: 'Fabricación', sortable: true },\n  { key: 'Capacidad', sortable: true },\n  { key: 'Gal/Hr', sortable: true },\n  { key: 'Maquina Seca', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst driversColumns = [\n  { key: 'Tipo Conductor', sortable: true },\n  { key: 'Tarifa', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst servicesColumns = [\n  { key: 'Servicio', sortable: true },\n  { key: 'Descripción', sortable: true },\n  { key: 'Tarifa base', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst vehicles = ref([])\nconst drivers = ref([])\nconst services = ref([])\nconst currencies = ref([])\nconst itemSelected = ref(null)\nconst showNewVehicle = ref(false)\nconst loadingNewVehicle = ref(false)\nconst showNewDriver = ref(false)\nconst showNewCurrency = ref(false)\nconst showNewService = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst selectedType: any = ref(null)\nconst formVehicle: any = ref({})\nconst formDriver: any = ref({})\nconst formCurrency: any = ref({})\nconst formService: any = ref({})\nconst { validate, reset: vehicleReset } = useForm('fgVehicle')\nconst { validate: driverValidate, reset: driverReset } = useForm('fgDriver')\nconst { validate: currencyValidate, reset: currencyReset } = useForm('fgCurrency')\nconst { validate: serviceValidate, reset: serviceReset } = useForm('fgService')\n\nonMounted(() => {\n  getVehicles()\n  getDrivers()\n  getCurrencies()\n  getServices()\n})\n\nconst loadingServices = ref(false)\nasync function getServices() {\n  loadingServices.value = true\n  const servicesData: any = await getAllServices()\n  services.value = servicesData.map((i: any) => ({\n    ...i,\n    Servicio: i.service,\n    Descripción: i.description,\n    'Tarifa base': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingServices.value = false\n}\n\nconst loadingVehicles = ref(false)\nasync function getVehicles() {\n  loadingVehicles.value = true\n  const vehiclesData: any = await getAllVehicles()\n  vehicles.value = vehiclesData.map((i: any) => ({\n    ...i,\n    Vehiculo: i.name,\n    Fabricación: i.year,\n    Capacidad: i.capacity,\n    'Gal/Hr': `${i.cost || 0}`,\n    'Maquina Seca': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingVehicles.value = false\n}\n\nconst loadingDrivers = ref(false)\nasync function getDrivers() {\n  loadingDrivers.value = true\n  const driversData: any = await getAllDrivers()\n  drivers.value = driversData.map((i: any) => ({\n    ...i,\n    'Tipo Conductor': i.type,\n    Tarifa: i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingDrivers.value = false\n}\n\nasync function getCurrencies() {\n  const currenciesData: any = await getAllCurrencies()\n  currencies.value = currenciesData.map((i: any) => ({\n    ...i,\n    Moneda: i.label,\n    'Tipo de Cambio': i.value,\n  }))\n}\n\nconst doDelete = async () => {\n  if (selectedType.value === 'vehicles') {\n    await deleteVehicle(itemSelected.value)\n    await getVehicles()\n  }\n\n  if (selectedType.value === 'currencies') {\n    await deleteCurrency(itemSelected.value)\n    await getCurrencies()\n  }\n\n  if (selectedType.value === 'drivers') {\n    await deleteDriver(itemSelected.value)\n    await getDrivers()\n  }\n\n  if (selectedType.value === 'service') {\n    await deleteService(itemSelected.value)\n    await getServices()\n  }\n\n  selectedType.value = null\n  showConfirm.value = false\n}\nconst doNewVehicle = async () => {\n  loadingNewVehicle.value = true\n  try {\n    validate()\n    await newVehicle({\n      ...formVehicle.value,\n    })\n\n    await getVehicles()\n\n    notify({\n      message: 'Vehiculo registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewVehicle.value = false\n    vehicleReset()\n    showNewVehicle.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst loadingNewDriver = ref(false)\nconst doNewDriver = async () => {\n  try {\n    driverValidate()\n    loadingNewDriver.value = true\n    await newDriver({\n      ...formDriver.value,\n    })\n\n    await getDrivers()\n\n    notify({\n      message: 'Conductor registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewDriver.value = false\n\n    driverReset()\n    showNewDriver.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst loadingNewService = ref(false)\nconst doNewService = async () => {\n  try {\n    serviceValidate()\n    loadingNewService.value = true\n    await newService({\n      ...formService.value,\n    })\n\n    await getServices()\n\n    notify({\n      message: 'Servicio registrado correctamente',\n      color: 'success',\n    })\n    loadingNewService.value = false\n\n    serviceReset()\n    formService.value = {}\n    showNewService.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst doNewCurrency = async () => {\n  try {\n    currencyValidate()\n    await newCurrency({\n      ...formCurrency.value,\n    })\n\n    await getCurrencies()\n\n    notify({\n      message: 'Moneda registrado correctamente',\n      color: 'success',\n    })\n\n    currencyReset()\n    showNewCurrency.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any, type: string) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n  selectedType.value = type\n}\nconst showViewService = ref(false)\nconst viewService = (data: any) => {\n  showNewService.value = true\n  showViewService.value = true\n  formService.value = data\n}\nconst closeViewService = () => {\n  formService.value = {}\n  showViewService.value = false\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Vehiculos\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewVehicle = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"vehicles\" :columns=\"vehiclesColumns\" class=\"text-xs\" :loading=\"loadingVehicles\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'vehicles')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal v-model=\"showNewVehicle\" hide-default-actions size=\"300px\" close-button blur no-dismiss @ok=\"doNewVehicle\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo vehiculo</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgVehicle\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formVehicle.name\"\n              stateful\n              name=\"name\"\n              clearable\n              label=\"Nombre de Vehiculo\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.capacity\"\n              v-only-digits\n              stateful\n              name=\"capacity\"\n              type=\"number\"\n              clearable\n              label=\"Capacidad\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.year\"\n              v-only-numbers\n              stateful\n              name=\"year\"\n              type=\"text\"\n              clearable\n              label=\"Año\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Maquina Seca\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formVehicle.fee = ceil(formVehicle.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n\n            <VaInput\n              v-model=\"formVehicle.cost\"\n              v-only-digits\n              stateful\n              type=\"number\"\n              name=\"cost\"\n              clearable\n              label=\"Consumo por kilometro (gal/hr)\"\n              class=\"mb-5\"\n            />\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewVehicle\" @click=\"doNewVehicle\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Conductores\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewDriver = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"drivers\" :columns=\"driversColumns\" class=\"text-xs\" :loading=\"loadingDrivers\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'drivers')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal v-model=\"showNewDriver\" hide-default-actions size=\"300px\" close-button blur no-dismiss @ok=\"doNewDriver\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo tipo de conductor</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgDriver\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formDriver.type\"\n              stateful\n              name=\"type\"\n              clearable\n              label=\"Tipo de chofer\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formDriver.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Tarifa por Hora\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formDriver.fee = ceil(formDriver.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"pr-2 font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewDriver\" @click=\"doNewDriver\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <!-- <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Monedas\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewCurrency = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"currencies\" :columns=\"currenciesColumns\" class=\"text-xs\">\n            <template #cell(actions)=\"{ row, isExpanded }\">\n              <div class=\"flex gap-1\">\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  @click=\"needConfirm(row?.rowData?.id, 'currencies')\"\n                  round\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard> -->\n\n    <VaModal v-model=\"showNewCurrency\" hide-default-actions size=\"300px\" close-button blur @ok=\"doNewCurrency\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nueva Moneda</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgCurrency\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formCurrency.label\"\n              stateful\n              name=\"label\"\n              clearable\n              label=\"Moneda\"\n              class=\"mb-4\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formCurrency.value\"\n              stateful\n              name=\"value\"\n              clearable\n              label=\"Tipo de Cambio\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n            />\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" @click=\"doNewCurrency\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Servicios\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewService = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"services\" :columns=\"servicesColumns\" class=\"text-xs\" :loading=\"loadingServices\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"visibility\" color=\"info\" round @click=\"viewService(row?.rowData)\"></VaButton>\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'service')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNewService\"\n      hide-default-actions\n      size=\"400px\"\n      close-button\n      no-dismiss\n      blur\n      @beforeClose=\"closeViewService\"\n    >\n      <div>\n        <h4 v-if=\"!showViewService\" class=\"text-base mb-4\">Nuevo Servicio</h4>\n        <h4 v-if=\"showViewService\" class=\"text-base mb-4\">Detalle de Servicio</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgService\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formService.service\"\n              stateful\n              name=\"service\"\n              clearable\n              label=\"Tipo de servicio\"\n              class=\"mb-3\"\n              :readonly=\"showViewService\"\n              :rules=\"[validators.required]\"\n            />\n\n            <div class=\"columns-2\">\n              <div>\n                <VaInput\n                  v-model=\"formService.description\"\n                  stateful\n                  name=\"description\"\n                  clearable\n                  label=\"Detalle del servicio\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  :rules=\"[validators.required]\"\n                />\n              </div>\n\n              <div>\n                <VaInput\n                  v-model=\"formService.fee\"\n                  v-only-digits\n                  stateful\n                  name=\"fee\"\n                  clearable\n                  label=\"Tarifa base\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  :rules=\"[validators.required]\"\n                  @change=\"\n                    () => {\n                      formService.fee = ceil(formService.fee, 2)\n                    }\n                  \"\n                >\n                  <template #prependInner>\n                    <span class=\"pr-2 font-bold text-sm\">S/</span>\n                  </template>\n                </VaInput>\n              </div>\n            </div>\n\n            <div class=\"mb-5\">\n              <p style=\"font-size: 11px; font-weight: 600; color: var(--va-primary)\">Condiciones especificas:</p>\n              <QuillEditor\n                v-model:content=\"formService.specifications\"\n                theme=\"snow\"\n                content-type=\"html\"\n                :toolbar=\"['bold', 'italic']\"\n              />\n            </div>\n          </VaForm>\n        </div>\n        <div v-if=\"!showViewService\" class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewService\" @click=\"doNewService\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n\n    <Expenses />\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null, '')\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n"],"names":["vOnlyDigits","onlyNumbers","notify","useToast","columns","items","ref","itemSelected","showNew","showConfirm","isDeleting","isLoading","form","validate","reset","useForm","onMounted","getData","data","getAllExpenses","i","doDelete","deleteExpense","doNew","newExpense","e","needConfirm","id","services","API","_token","getAllCurrencies","requestOptions","res","response","newCurrency","body","deleteCurrency","vOnlyNumbers","onlyNumbersNoDigits","vehiclesColumns","driversColumns","servicesColumns","vehicles","drivers","currencies","showNewVehicle","loadingNewVehicle","showNewDriver","showNewCurrency","showNewService","selectedType","formVehicle","formDriver","formCurrency","formService","vehicleReset","driverValidate","driverReset","currencyValidate","currencyReset","serviceValidate","serviceReset","getVehicles","getDrivers","getCurrencies","getServices","loadingServices","servicesData","getAllServices","loadingVehicles","vehiclesData","getAllVehicles","loadingDrivers","driversData","getAllDrivers","currenciesData","deleteVehicle","deleteDriver","deleteService","doNewVehicle","newVehicle","loadingNewDriver","doNewDriver","newDriver","loadingNewService","doNewService","newService","doNewCurrency","type","showViewService","viewService","closeViewService"],"mappings":"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"}