{"version":3,"file":"Orders-2876c941.js","sources":["../../src/core/requests/Orders.ts"],"sourcesContent":["import { API } from '../constants'\r\n\r\nconst services = {\r\n  list: API + '/orders',\r\n  byid: API + '/orders',\r\n  delete: API + '/orders',\r\n  register: API + '/orders',\r\n}\r\n\r\nconst _token = localStorage.getItem('__token')\r\n\r\nexport async function getAllOrders(params?: any) {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n  }\r\n  let res = null\r\n\r\n  await fetch(\r\n    params\r\n      ? `${services.list}?start_date=${params.start || ''}&end_date=${params.end || ''}&status=${params.status || ''}`\r\n      : services.list,\r\n    requestOptions,\r\n  ).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function getOrderById(id: any) {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/${id}`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function newOrder(body: any) {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n  let res = null\r\n\r\n  await fetch(services.register, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function deleteOrder(id: any) {\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/${id}`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function endOrder(id: any) {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/finalize/${id}`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function enableOrder(id: any) {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/enable/${id}`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function setVehicleDriver(body: any, id: any) {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/${id}/driver`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport async function setExpenseEmployee(body: any, id: any) {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + _token,\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n  let res = null\r\n\r\n  await fetch(`${services.list}/${id}/employee`, requestOptions).then((response) => {\r\n    res = response.json()\r\n  })\r\n\r\n  return res\r\n}\r\n"],"names":["services","API","_token","getAllOrders","params","requestOptions","res","response","getOrderById","id","newOrder","body","deleteOrder","endOrder","enableOrder","setVehicleDriver","setExpenseEmployee"],"mappings":"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"}