{"version":3,"file":"Settings-9dcb318d.js","sources":["../../src/core/requests/General.ts","../../src/pages/settings/pages/Company.vue","../../src/pages/settings/employee/NewEmployee.vue","../../src/pages/settings/employee/Employees.vue","../../src/pages/settings/Services.vue","../../src/pages/settings/VehicleDrivers.vue","../../src/pages/settings/Settings.vue"],"sourcesContent":["import { API } from '../constants'\n\nconst services = {\n  list: API + '/configurations/company',\n}\n\nconst _token = localStorage.getItem('__token')\n\nconst updateConfig = async (body: any) => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n    body: JSON.stringify(body),\n  }\n  let res = null\n\n  await fetch(services.list, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nconst getData = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + _token,\n    },\n  }\n  let res = null\n\n  await fetch(services.list, requestOptions).then((response) => {\n    res = response.json()\n  })\n\n  return res\n}\n\nexport default {\n  update: updateConfig,\n  getCompany: getData,\n}\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport * as company$ from '../../../core/requests/General'\n\nconst { notify } = useToast()\nconst form: any = ref({})\nconst { validate } = useForm('formCompany')\nconst basic = ref([])\nconst isLoading = ref(false)\n\nonMounted(async () => {\n  await getData()\n})\n\nconst toBase64 = async (file: any) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = reject\n  })\n}\n\nasync function getData() {\n  isLoading.value = true\n  const data: any = await company$.default.getCompany()\n  form.value = {\n    name: data.name,\n    signature: data.signature,\n    social_reason: data.social_reason,\n    ruc: data.ruc,\n    office: data.office,\n    email: data.email,\n    phone: data.phone,\n    conditions: data.conditions,\n  }\n  isLoading.value = false\n}\n\nconst doUpdate = async () => {\n  try {\n    validate()\n\n    if (basic.value.length) {\n      const signFile = await toBase64(basic.value[0])\n      form.value.sign = signFile\n    }\n\n    await company$.default.update(form.value)\n\n    notify({\n      message: 'Actualizado correctamente',\n      color: 'success',\n    })\n  } catch (e: any) {\n    console.log(e)\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Datos de Empresa\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"save\" color=\"primary\" @click=\"doUpdate\">Actualizar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div>\n          <div class=\"flex flex-col mt-4 px-4\">\n            <VaForm ref=\"formCompany\" immediate class=\"gap-2\">\n              <VaInput\n                v-model=\"form.name\"\n                stateful\n                name=\"name\"\n                clearable\n                label=\"Nombre de Empresa\"\n                class=\"mb-4\"\n                :loading=\"isLoading\"\n              />\n              <VaInput\n                v-model=\"form.social_reason\"\n                stateful\n                name=\"social_reason\"\n                clearable\n                label=\"Razón Social\"\n                class=\"mb-4\"\n                :loading=\"isLoading\"\n              />\n              <VaInput v-model=\"form.ruc\" stateful name=\"ruc\" clearable label=\"RUC\" class=\"mb-4\" :loading=\"isLoading\" />\n              <VaInput\n                v-model=\"form.office\"\n                stateful\n                name=\"office\"\n                clearable\n                label=\"Dirección de Oficina\"\n                class=\"mb-4\"\n                :loading=\"isLoading\"\n              />\n              <VaInput\n                v-model=\"form.email\"\n                stateful\n                name=\"email\"\n                clearable\n                label=\"Correo de Contacto\"\n                class=\"mb-4\"\n                :loading=\"isLoading\"\n              />\n              <VaInput\n                v-model=\"form.phone\"\n                stateful\n                name=\"phone\"\n                clearable\n                label=\"Teléfono de Contacto\"\n                class=\"mb-4\"\n                :loading=\"isLoading\"\n              />\n\n              <div class=\"mb-4\">\n                <div v-if=\"form?.signature\" class=\"my-2 mb-4\">\n                  <p class=\"mb-2\" style=\"font-size: 11px; font-weight: 600; color: var(--va-primary)\">Firma:</p>\n                  <img :src=\"form?.signature\" style=\"width: 120px\" alt=\"\" />\n                </div>\n                <VaFileUpload\n                  v-model=\"basic\"\n                  dropzone\n                  drop-zone-text=\"Arrastra o selecciona tu firma\"\n                  upload-button-text=\"Buscar\"\n                  file-types=\"jpg,jpeg,png\"\n                />\n                <p v-if=\"basic?.length > 1\" class=\"text-xxs bg-red-100 px-2\">Solo se admite un archivo.</p>\n              </div>\n\n              <div class=\"mb-5\">\n                <p style=\"font-size: 11px; font-weight: 600; color: var(--va-primary)\">Condiciones Generales:</p>\n                <QuillEditor\n                  v-model:content=\"form.conditions\"\n                  theme=\"snow\"\n                  content-type=\"html\"\n                  :toolbar=\"['bold', 'italic']\"\n                />\n              </div>\n            </VaForm>\n          </div>\n          <div class=\"flex justify-end\">\n            <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" @click=\"doUpdate\">\n              <span class=\"ml-2\">Actualizar</span>\n            </VaButton>\n          </div>\n        </div>\n      </VaCardContent>\n    </VaCard>\n  </div>\n</template>\n\n<style>\n.va-file-upload__field__text {\n  font-size: 11px;\n}\n\n.va-button--small .va-button__content {\n  font-size: 11px !important;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { onMounted, reactive, ref } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { useToast } from 'vuestic-ui'\nimport Employee from '../../../core/requests/Employee'\nimport { validators } from '../../../services/utils'\n\nconst emit = defineEmits(['close'])\n\nconst props = defineProps({\n  data: {\n    default: null,\n    type: Object,\n  },\n})\n\nconst isLoading = ref(false)\nconst { isValid, validate } = useForm('formRef')\nconst form: any = reactive({\n  ...(props.data && {\n    names: props.data?.names,\n    lastnames: props.data?.lastnames,\n    email: props.data?.email,\n    phone: props.data?.phone,\n    status: props.data?.status,\n  }),\n})\nconst { notify } = useToast()\n\nonMounted(() => {\n  console.log(props.data)\n})\n\nconst doProcess = async () => {\n  if (validate()) {\n    isLoading.value = true\n    try {\n      const body: any = {\n        ...form,\n        status: form.status ? 1 : 0,\n      }\n\n      const response: any = props.data ? await Employee.update(body, props.data.id) : await Employee.register(body)\n\n      if (response.status == true) {\n        notify({ message: 'Trabajador grabado correctamente', color: 'primary' })\n        emit('close')\n      } else {\n        notify({ message: 'Error al grabar trabajador', color: 'danger' })\n      }\n    } catch (e: any) {\n      console.log(e)\n    }\n\n    isLoading.value = false\n  }\n}\n</script>\n\n<template>\n  <div class=\"bg-blue-50\">\n    <div class=\"mb-4\">\n      <div class=\"flex justify-between align-center justify-center\">\n        <h1 class=\"h5 font-bold m-0\">{{ $props.data?.username ? 'Editar' : 'Nuevo' }} Trabajador</h1>\n      </div>\n    </div>\n\n    <div class=\"new-employee gap-8\">\n      <VaForm ref=\"formRef\" immediate class=\"gap-2\">\n        <div class=\"w-full bg-white p-2 pb-5 mb-4\">\n          <div class=\"gap-2\">\n            <div class=\"columns-1 mt-1\">\n              <div class=\"w-full mb-2\">\n                <VaInput v-model=\"form.names\" :rules=\"[validators.required]\" stateful clearable label=\"Nombres\" />\n              </div>\n\n              <div class=\"w-full mb-2\">\n                <VaInput v-model=\"form.lastnames\" :rules=\"[validators.required]\" stateful clearable label=\"Apellidos\" />\n              </div>\n\n              <div class=\"w-full mb-4\">\n                <VaInput v-model=\"form.phone\" :rules=\"[validators.required]\" stateful clearable label=\"Teléfono\" />\n              </div>\n\n              <div class=\"w-full\">\n                <VaSwitch v-model=\"form.status\" size=\"small\" label=\"Estado\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </VaForm>\n    </div>\n\n    <div class=\"pb-3\">\n      <div class=\"flex justify-end\">\n        <div class=\"flex gap-2\">\n          <VaButton icon=\"save\" color=\"primary\" :disabled=\"!isValid\" :loading=\"isLoading\" @click=\"doProcess\">\n            <span class=\"text-xs px-1\">Grabar Trabajador</span>\n          </VaButton>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.new-employee {\n  &-tabs {\n    .va-tabs__content {\n      width: 100%;\n    }\n  }\n\n  .float-profile {\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n\n  .va-switch__label {\n    font-size: 12px;\n  }\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { format } from 'date-fns'\nimport NewEmployee from './NewEmployee.vue'\nimport Employee from '../../../core/requests/Employee'\n\nconst data: any = ref([])\nconst showConfirm: any = ref(null)\nconst isDeleting = ref(false)\nconst isLoading = ref(false)\nconst showNewUser = ref(false)\nconst selectedUser: any = ref(null)\n\nonMounted(() => {\n  getData()\n})\n\nconst getData = async () => {\n  isLoading.value = true\n  showNewUser.value = false\n  const _data: any = await Employee.getAll()\n  data.value = _data.map((e: any) => ({\n    ...e,\n    status: !!e.status,\n    loading: false,\n    created_at: format(new Date(e.created_at), 'dd/MM/yyyy'),\n  }))\n  isLoading.value = false\n}\nconst doDelete = async () => {\n  isDeleting.value = true\n  await Employee.delete(showConfirm.value?.id)\n  showConfirm.value = null\n  getData()\n  isDeleting.value = false\n}\nconst doDisable = async (e: any) => {\n  e.loading = true\n  await Employee.update(\n    {\n      names: e?.names,\n      lastnames: e?.lastnames,\n      // email: e?.email,\n      phone: e?.phone,\n      status: e?.status ? 1 : 0,\n    },\n    e?.id,\n  )\n  getData()\n  e.loading = false\n}\nconst select4Edit = (data: any) => {\n  selectedUser.value = data\n  showNewUser.value = true\n}\nconst openNewUser = () => {\n  showNewUser.value = true\n  selectedUser.value = null\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaInnerLoading :loading=\"isLoading\">\n      <VaCard>\n        <VaCardTitle class=\"d-flex justify-between\">\n          Administración de trabajadores\n          <VaButton icon=\"add\" color=\"primary\" @click=\"openNewUser\">\n            <span class=\"px-1\">Nuevo Trabajador</span>\n          </VaButton>\n        </VaCardTitle>\n        <VaCardContent>\n          <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n            <div class=\"va-table-responsive\">\n              <table class=\"va-table w-full text-xs\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Nombres Completos</th>\n                    <!-- <th>Correo Electrónico</th> -->\n                    <th>Teléfono</th>\n                    <th>Estado</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"t in data\" :key=\"t.id\">\n                    <td>00{{ t.id }}</td>\n                    <td>{{ t.names }} {{ t.lastnames }}</td>\n                    <!-- <td>{{ t.email }}</td> -->\n                    <td>{{ t.phone }}</td>\n                    <td>\n                      <VaSwitch\n                        v-model=\"t.status\"\n                        :loading=\"t.loading\"\n                        size=\"small\"\n                        @update:modelValue=\"doDisable(t)\"\n                      />\n                    </td>\n                    <td>\n                      <div class=\"flex gap-1\">\n                        <VaButton icon=\"edit\" color=\"primary\" round @click=\"select4Edit(t)\"></VaButton>\n                        <VaButton icon=\"delete\" color=\"danger\" round @click=\"showConfirm = t\"></VaButton>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </VaCardContent>\n      </VaCard>\n    </VaInnerLoading>\n\n    <VaModal v-model=\"showNewUser\" size=\"360px\" close-button hide-default-actions blur no-dismiss>\n      <div>\n        <NewEmployee :data=\"selectedUser\" @close=\"getData\" />\n      </div>\n    </VaModal>\n\n    <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n      <p class=\"text-sm\">¿Deseas eliminar este trabajador?</p>\n\n      <template #footer>\n        <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"showConfirm = null\"> Cancelar</VaButton>\n        <VaButton :loading=\"isDeleting\" size=\"small\" @click=\"doDelete\"> Continuar</VaButton>\n      </template>\n    </VaModal>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteService, getAllServices, newService } from '../../core/requests/Services'\nimport { validators } from '../../services/utils'\nimport { onlyNumbers } from '../../core/helpers'\nimport { ceil } from 'lodash'\n\nconst vOnlyDigits = onlyNumbers\n\nconst { notify } = useToast()\nconst servicesColumns = [\n  { key: 'Servicio', sortable: true },\n  { key: 'Descripción', sortable: true },\n  { key: 'Tarifa base', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst services = ref([])\nconst itemSelected = ref(null)\nconst showNewService = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst selectedType: any = ref(null)\nconst formService: any = ref({})\nconst { validate: serviceValidate, reset: serviceReset } = useForm('fgService')\n\nonMounted(() => {\n  getServices()\n})\n\nconst loadingServices = ref(false)\nasync function getServices() {\n  loadingServices.value = true\n  const servicesData: any = await getAllServices()\n  services.value = servicesData.map((i: any) => ({\n    ...i,\n    Servicio: i.service,\n    Descripción: i.description,\n    'Tarifa base': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingServices.value = false\n}\n\nconst doDelete = async () => {\n  if (selectedType.value === 'service') {\n    await deleteService(itemSelected.value)\n    await getServices()\n  }\n\n  selectedType.value = null\n  showConfirm.value = false\n}\n\nconst loadingNewService = ref(false)\nconst doNewService = async () => {\n  try {\n    serviceValidate()\n    loadingNewService.value = true\n    await newService({\n      ...formService.value,\n    })\n\n    await getServices()\n\n    notify({\n      message: 'Servicio registrado correctamente',\n      color: 'success',\n    })\n    loadingNewService.value = false\n\n    serviceReset()\n    formService.value = {}\n    showNewService.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any, type: string) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n  selectedType.value = type\n}\nconst showViewService = ref(false)\nconst viewService = (data: any) => {\n  showNewService.value = true\n  showViewService.value = true\n  formService.value = data\n}\nconst closeViewService = () => {\n  formService.value = {}\n  showViewService.value = false\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Servicios\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewService = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"services\" :columns=\"servicesColumns\" class=\"text-xs\" :loading=\"loadingServices\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton icon=\"visibility\" color=\"info\" round @click=\"viewService(row?.rowData)\"></VaButton>\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'service')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal\n      v-model=\"showNewService\"\n      hide-default-actions\n      size=\"400px\"\n      close-button\n      no-dismiss\n      blur\n      @beforeClose=\"closeViewService\"\n    >\n      <div>\n        <h4 v-if=\"!showViewService\" class=\"text-base mb-4\">Nuevo Servicio</h4>\n        <h4 v-if=\"showViewService\" class=\"text-base mb-4\">Detalle de Servicio</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgService\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formService.service\"\n              stateful\n              name=\"service\"\n              clearable\n              label=\"Tipo de servicio\"\n              class=\"mb-3\"\n              :readonly=\"showViewService\"\n              :rules=\"[validators.required]\"\n            />\n\n            <div class=\"columns-2\">\n              <div>\n                <VaInput\n                  v-model=\"formService.description\"\n                  stateful\n                  name=\"description\"\n                  clearable\n                  label=\"Detalle del servicio\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  :rules=\"[validators.required]\"\n                />\n              </div>\n\n              <div>\n                <VaInput\n                  v-model=\"formService.fee\"\n                  v-only-digits\n                  stateful\n                  name=\"fee\"\n                  clearable\n                  label=\"Tarifa base\"\n                  class=\"mb-3\"\n                  :readonly=\"showViewService\"\n                  :rules=\"[validators.required]\"\n                  @change=\"\n                    () => {\n                      formService.fee = ceil(formService.fee, 2)\n                    }\n                  \"\n                >\n                  <template #prependInner>\n                    <span class=\"pr-2 font-bold text-sm\">S/</span>\n                  </template>\n                </VaInput>\n              </div>\n            </div>\n\n            <div class=\"mb-5\">\n              <p style=\"font-size: 11px; font-weight: 600; color: var(--va-primary)\">Condiciones especificas:</p>\n              <QuillEditor\n                v-model:content=\"formService.specifications\"\n                theme=\"snow\"\n                content-type=\"html\"\n                :toolbar=\"['bold', 'italic']\"\n              />\n            </div>\n          </VaForm>\n        </div>\n        <div v-if=\"!showViewService\" class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewService\" @click=\"doNewService\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null, '')\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n","<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteDriver, getAllDrivers, newDriver } from '../../core/requests/Drivers'\nimport { validators } from '../../services/utils'\nimport { onlyNumbers } from '../../core/helpers'\nimport { ceil } from 'lodash'\n\nconst vOnlyDigits = onlyNumbers\n\nconst { notify } = useToast()\nconst driversColumns = [\n  { key: 'Tipo Conductor', sortable: true },\n  { key: 'Tarifa', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst drivers = ref([])\nconst itemSelected = ref(null)\nconst showNewDriver = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst selectedType: any = ref(null)\nconst formDriver: any = ref({})\nconst { validate: driverValidate, reset: driverReset } = useForm('fgDriver')\nuseForm('fgCurrency')\n\nonMounted(() => {\n  getDrivers()\n})\n\nconst loadingDrivers = ref(false)\nasync function getDrivers() {\n  loadingDrivers.value = true\n  const driversData: any = await getAllDrivers()\n  drivers.value = driversData.map((i: any) => ({\n    ...i,\n    'Tipo Conductor': i.type,\n    Tarifa: i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingDrivers.value = false\n}\n\nconst doDelete = async () => {\n  if (selectedType.value === 'drivers') {\n    await deleteDriver(itemSelected.value)\n    await getDrivers()\n  }\n\n  selectedType.value = null\n  showConfirm.value = false\n}\n\nconst loadingNewDriver = ref(false)\nconst doNewDriver = async () => {\n  try {\n    driverValidate()\n    loadingNewDriver.value = true\n    await newDriver({\n      ...formDriver.value,\n    })\n\n    await getDrivers()\n\n    notify({\n      message: 'Conductor registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewDriver.value = false\n\n    driverReset()\n    showNewDriver.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\n\nconst needConfirm = (id: any, type: string) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n  selectedType.value = type\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Conductores\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewDriver = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"drivers\" :columns=\"driversColumns\" class=\"text-xs\" :loading=\"loadingDrivers\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'drivers')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal v-model=\"showNewDriver\" hide-default-actions size=\"300px\" close-button blur no-dismiss @ok=\"doNewDriver\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo tipo de conductor</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgDriver\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formDriver.type\"\n              stateful\n              name=\"type\"\n              clearable\n              label=\"Tipo de chofer\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formDriver.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Tarifa por Hora\"\n              class=\"mb-5\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formDriver.fee = ceil(formDriver.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"pr-2 font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewDriver\" @click=\"doNewDriver\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null, '')\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport Masters from './Masters.vue'\nimport General from './General.vue'\nimport Company from './pages/Company.vue'\nimport Users from './Users.vue'\nimport Employees from './employee/Employees.vue'\nimport Vehicles from './Vehicles.vue'\nimport Services from './Services.vue'\nimport VehicleDrivers from './VehicleDrivers.vue'\nimport Expenses from './pages/Expenses.vue'\n\nconst tabs = [\n  { icon: '', title: 'Datos de Empresa', content: '' },\n  // { icon: '', title: 'Configuración General', content: '' },\n  { icon: '', title: 'Maestro de Vehiculos', content: '' },\n  { icon: '', title: 'Maestro de Rutas', content: '' },\n  { icon: '', title: 'Maestro de Servicios', content: '' },\n  { icon: '', title: 'Maestro de Conductores', content: '' },\n  { icon: '', title: 'Maestro de Viaticos', content: '' },\n  { icon: '', title: 'Trabajadores', content: '' },\n  { icon: '', title: 'Usuarios', content: '' },\n]\nconst activeTab = ref(tabs[0].title)\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 4\">\n    <div class=\"flex justify-between align-center justify-center\">\n      <h1 class=\"h5 m-0\">Configuración</h1>\n    </div>\n\n    <div class=\"flex py-3\">\n      <div class=\"w-full\">\n        <VaTabs v-model=\"activeTab\" vertical grow>\n          <template #tabs>\n            <VaTab v-for=\"tab in tabs\" :key=\"tab.title\" class=\"text-xs py-1 px-0\" :name=\"tab.title\">\n              <VaIcon :name=\"tab.icon\" size=\"small\" class=\"mr-2\" />\n              {{ tab.title }}\n            </VaTab>\n          </template>\n        </VaTabs>\n      </div>\n\n      <section class=\"settings-section w-full bg-blue-50 px-6 py-5\">\n        <Company v-if=\"activeTab === 'Datos de Empresa'\" />\n        <Vehicles v-if=\"activeTab === 'Maestro de Vehiculos'\" />\n        <General v-if=\"activeTab === 'Maestro de Rutas'\" />\n        <Services v-if=\"activeTab === 'Maestro de Servicios'\" />\n        <VehicleDrivers v-if=\"activeTab === 'Maestro de Conductores'\" />\n        <Expenses v-if=\"activeTab === 'Maestro de Viaticos'\" />\n        <Masters v-if=\"activeTab === 'Configuración General'\" />\n        <Users v-if=\"activeTab === 'Usuarios'\" />\n        <Employees v-if=\"activeTab === 'Trabajadores'\" />\n      </section>\n    </div>\n  </div>\n</template>\n"],"names":["services","API","_token","updateConfig","body","requestOptions","res","response","getData","General","notify","useToast","form","ref","validate","useForm","basic","isLoading","onMounted","toBase64","file","resolve","reject","reader","data","company$.default","doUpdate","signFile","e","emit","__emit","props","__props","isValid","reactive","_a","_b","_c","_d","_e","doProcess","Employee","showConfirm","isDeleting","showNewUser","selectedUser","_data","format","doDelete","doDisable","select4Edit","openNewUser","vOnlyDigits","onlyNumbers","servicesColumns","itemSelected","showNewService","selectedType","formService","serviceValidate","serviceReset","getServices","loadingServices","servicesData","getAllServices","i","deleteService","loadingNewService","doNewService","newService","needConfirm","id","type","showViewService","viewService","closeViewService","driversColumns","drivers","showNewDriver","formDriver","driverValidate","driverReset","getDrivers","loadingDrivers","driversData","getAllDrivers","deleteDriver","loadingNewDriver","doNewDriver","newDriver","tabs","activeTab"],"mappings":"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"}