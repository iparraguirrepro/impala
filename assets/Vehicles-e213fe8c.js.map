{"version":3,"file":"Vehicles-e213fe8c.js","sources":["../../src/pages/settings/Vehicles.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { deleteVehicle, getAllVehicles, newVehicle } from '../../core/requests/Vehicles'\nimport { validators } from '../../services/utils'\nimport { onlyNumbers, onlyNumbersNoDigits } from '../../core/helpers'\nimport { ceil } from 'lodash'\n\nconst vOnlyDigits = onlyNumbers\nconst vOnlyNumbers = onlyNumbersNoDigits\n\nconst { notify } = useToast()\nconst vehiclesColumns = [\n  { key: 'Vehiculo', sortable: true },\n  { key: 'Fabricación', sortable: true },\n  { key: 'Capacidad', sortable: true },\n  { key: 'Gal/Hr', sortable: true },\n  { key: 'Maquina Seca', sortable: true },\n  { key: 'Acciones', width: 80 },\n]\nconst vehicles = ref([])\nconst itemSelected = ref(null)\nconst showNewVehicle = ref(false)\nconst loadingNewVehicle = ref(false)\nconst showConfirm = ref(false)\nconst isDeleting = ref(false)\nconst selectedType: any = ref(null)\nconst formVehicle: any = ref({})\nconst { validate, reset: vehicleReset } = useForm('fgVehicle')\n\nonMounted(() => {\n  getVehicles()\n})\n\nconst loadingVehicles = ref(false)\nasync function getVehicles() {\n  loadingVehicles.value = true\n  const vehiclesData: any = await getAllVehicles()\n  vehicles.value = vehiclesData.map((i: any) => ({\n    ...i,\n    Vehiculo: i.name,\n    Fabricación: i.year,\n    Capacidad: i.capacity,\n    'Gal/Hr': `${i.cost || 0}`,\n    'Maquina Seca': i.fee ? `S/ ${i.fee || '0.00'}` : '-',\n  }))\n  loadingVehicles.value = false\n}\n\nconst doDelete = async () => {\n  if (selectedType.value === 'vehicles') {\n    await deleteVehicle(itemSelected.value)\n    await getVehicles()\n  }\n\n  selectedType.value = null\n  showConfirm.value = false\n}\nconst doNewVehicle = async () => {\n  loadingNewVehicle.value = true\n  try {\n    validate()\n    await newVehicle({\n      ...formVehicle.value,\n    })\n\n    await getVehicles()\n\n    notify({\n      message: 'Vehiculo registrado correctamente',\n      color: 'success',\n    })\n\n    loadingNewVehicle.value = false\n    vehicleReset()\n    showNewVehicle.value = false\n  } catch (e: any) {\n    console.log(e)\n  }\n}\nconst needConfirm = (id: any, type: string) => {\n  showConfirm.value = id ? true : false\n  itemSelected.value = id\n  selectedType.value = type\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col space-y-6 md:space-y-4\">\n    <VaCard>\n      <VaCardTitle class=\"flex justify-between\">\n        Vehiculos\n        <VaButton class=\"ml-3 pr-2 pl-1\" icon=\"add\" color=\"primary\" @click=\"showNewVehicle = true\">Agregar</VaButton>\n      </VaCardTitle>\n      <VaCardContent>\n        <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n          <VaDataTable :items=\"vehicles\" :columns=\"vehiclesColumns\" class=\"text-xs\" :loading=\"loadingVehicles\">\n            <template #cell(Acciones)=\"{ row }\">\n              <div class=\"flex gap-1\">\n                <VaButton\n                  icon=\"delete\"\n                  color=\"danger\"\n                  round\n                  @click=\"needConfirm(row?.rowData?.id, 'vehicles')\"\n                ></VaButton>\n              </div>\n            </template>\n          </VaDataTable>\n        </div>\n      </VaCardContent>\n    </VaCard>\n\n    <VaModal v-model=\"showNewVehicle\" hide-default-actions size=\"300px\" close-button blur no-dismiss @ok=\"doNewVehicle\">\n      <div>\n        <h4 class=\"text-base mb-4\">Nuevo vehiculo</h4>\n        <div class=\"flex flex-col\">\n          <VaForm ref=\"fgVehicle\" immediate class=\"gap-2\">\n            <VaInput\n              v-model=\"formVehicle.name\"\n              stateful\n              name=\"name\"\n              clearable\n              label=\"Nombre de Vehiculo\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.capacity\"\n              v-only-digits\n              stateful\n              name=\"capacity\"\n              type=\"number\"\n              clearable\n              label=\"Capacidad\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.year\"\n              v-only-numbers\n              stateful\n              name=\"year\"\n              type=\"text\"\n              clearable\n              label=\"Año\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n            />\n\n            <VaInput\n              v-model=\"formVehicle.fee\"\n              v-only-digits\n              stateful\n              name=\"fee\"\n              clearable\n              label=\"Maquina Seca\"\n              class=\"mb-3\"\n              :rules=\"[validators.required]\"\n              @change=\"\n                () => {\n                  formVehicle.fee = ceil(formVehicle.fee, 2)\n                }\n              \"\n            >\n              <template #prependInner>\n                <span class=\"font-bold text-sm\">S/</span>\n              </template>\n            </VaInput>\n\n            <VaInput\n              v-model=\"formVehicle.cost\"\n              v-only-digits\n              stateful\n              type=\"number\"\n              name=\"cost\"\n              clearable\n              label=\"Consumo por kilometro (gal/hr)\"\n              class=\"mb-5\"\n            />\n          </VaForm>\n        </div>\n        <div class=\"flex\">\n          <VaButton class=\"pr-2 pl-1\" icon=\"save\" color=\"primary\" :loading=\"loadingNewVehicle\" @click=\"doNewVehicle\">\n            <span class=\"ml-2\">Registrar</span>\n          </VaButton>\n        </div>\n      </div>\n    </VaModal>\n  </div>\n\n  <VaModal v-model=\"showConfirm\" size=\"250px\" hide-default-actions no-dismiss blur>\n    <p class=\"text-sm\">¿Deseas continuar?</p>\n\n    <template #footer>\n      <VaButton size=\"small\" preset=\"secondary\" class=\"mr-1\" @click=\"needConfirm(null, '')\"> Cancelar</VaButton>\n      <VaButton size=\"small\" :loading=\"isDeleting\" @click=\"doDelete\"> Continuar</VaButton>\n    </template>\n  </VaModal>\n</template>\n"],"names":["vOnlyDigits","onlyNumbers","vOnlyNumbers","onlyNumbersNoDigits","notify","useToast","vehiclesColumns","vehicles","ref","itemSelected","showNewVehicle","loadingNewVehicle","showConfirm","isDeleting","selectedType","formVehicle","validate","vehicleReset","useForm","onMounted","getVehicles","loadingVehicles","vehiclesData","getAllVehicles","i","doDelete","deleteVehicle","doNewVehicle","newVehicle","e","needConfirm","id","type"],"mappings":"uvBAQA,MAAMA,EAAcC,EACdC,EAAeC,EAEf,CAAE,OAAAC,GAAWC,IACbC,EAAkB,CACtB,CAAE,IAAK,WAAY,SAAU,EAAK,EAClC,CAAE,IAAK,cAAe,SAAU,EAAK,EACrC,CAAE,IAAK,YAAa,SAAU,EAAK,EACnC,CAAE,IAAK,SAAU,SAAU,EAAK,EAChC,CAAE,IAAK,eAAgB,SAAU,EAAK,EACtC,CAAE,IAAK,WAAY,MAAO,EAAG,CAAA,EAEzBC,EAAWC,EAAI,CAAA,CAAE,EACjBC,EAAeD,EAAI,IAAI,EACvBE,EAAiBF,EAAI,EAAK,EAC1BG,EAAoBH,EAAI,EAAK,EAC7BI,EAAcJ,EAAI,EAAK,EACvBK,EAAaL,EAAI,EAAK,EACtBM,EAAoBN,EAAI,IAAI,EAC5BO,EAAmBP,EAAI,CAAA,CAAE,EACzB,CAAE,SAAAQ,EAAU,MAAOC,CAAa,EAAIC,EAAQ,WAAW,EAE7DC,EAAU,IAAM,CACFC,GAAA,CACb,EAEK,MAAAC,EAAkBb,EAAI,EAAK,EACjC,eAAeY,GAAc,CAC3BC,EAAgB,MAAQ,GAClB,MAAAC,EAAoB,MAAMC,IAChChB,EAAS,MAAQe,EAAa,IAAKE,IAAY,CAC7C,GAAGA,EACH,SAAUA,EAAE,KACZ,YAAaA,EAAE,KACf,UAAWA,EAAE,SACb,SAAU,GAAGA,EAAE,MAAQ,CAAC,GACxB,eAAgBA,EAAE,IAAM,MAAMA,EAAE,KAAO,MAAM,GAAK,GAClD,EAAA,EACFH,EAAgB,MAAQ,EAC1B,CAEA,MAAMI,EAAW,SAAY,CACvBX,EAAa,QAAU,aACnB,MAAAY,EAAcjB,EAAa,KAAK,EACtC,MAAMW,EAAY,GAGpBN,EAAa,MAAQ,KACrBF,EAAY,MAAQ,EAAA,EAEhBe,EAAe,SAAY,CAC/BhB,EAAkB,MAAQ,GACtB,GAAA,CACOK,IACT,MAAMY,EAAW,CACf,GAAGb,EAAY,KAAA,CAChB,EAED,MAAMK,EAAY,EAEXhB,EAAA,CACL,QAAS,oCACT,MAAO,SAAA,CACR,EAEDO,EAAkB,MAAQ,GACbM,IACbP,EAAe,MAAQ,SAChBmB,EAAQ,CACf,QAAQ,IAAIA,CAAC,CACf,CAAA,EAEIC,EAAc,CAACC,EAASC,IAAiB,CACjCpB,EAAA,MAAQ,EAAAmB,EACpBtB,EAAa,MAAQsB,EACrBjB,EAAa,MAAQkB,CAAA"}